if(i %% 2 == 0)
print(i)
# --------------------------------
#
#  Rstudio3.r
#
#  Created by KJBS2 on 03/18/2016.
#  Copyright (c) 2016 KJBS2. All rights reserved.
#
# --------------------------------
x <- c(1, 3, 5, 7)
y <- c(2, 4, 6)
z <- x + y; z;
# --------------------------------
x[1]
x2 <- x[2]; x2
x[c(1, 3, 4)];x[-2]
# --------------------------------
seq(1, 10, 1)
seq(1, 15, length = 10)
seq(from = 1, by = 2, length = 10)
# --------------------------------
3:10;10:3
rep(3, 5);rep(c(1, 2, 3), 2)
# --------------------------------
a1 <- c(1, 2, 3, 4)
a2 <- c(5, 6, 7, 8)
a3 <- c(9, 10, 11, 12)
mat <- rbind(a1, a2, a3); mat
mat[1, 3]; mat[3, 2]
mat[2:1, 3]; mat[,3]
# --------------------------------
x <- -2.53
y <-  3.45
z <-  8
abs(x);sqrt(z)
round(x, 1);round(y)
log(z);round(log(z), 3)
choose(5, 3);factorial(5)
paste("a", "b", "c")
paste("z =", z, " and log(z) =", round(log(z), digit=2))
# --------------------------------
x <- 7; y <- 2
x ^ y; x %% y; x %/% y;
x > y; x < y; (x %% y) == 1; (x %/% y) != 3;
# --------------------------------
for(i in 1:3) {
x <- i + 1
print(x)
}
for(j in 5:1)
print(j)
# --------------------------------
if(3 < 5) print("yes")
if(3 > 5) print("yes")
if(3 > 5) print("yes") else print("no")
for(i in 1:10)
if(i %% 2 == 0)
print(i)
# --------------------------------
x[c(1, 3, 4)];x[c(-2, -3)]
x <- c(1, 3, 5, 7)
y <- c(2, 4, 6)
z <- x + y; z;
# --------------------------------
x[1]
x2 <- x[2]; x2
x[c(1, 3, 4)];x[c(-2, -3)]
x[c(1, 3, 4)];x[c(-2, -3, -7)]
mat1 <- rbind(a1, a2)
mat1 <- rbind(a1, a2); mat1
mat2 <- rbind(mat1, a3); mat2
mat3 <- 0
mat3 <- rbind(mat3, mat2)
mat3 <- rbind(mat3, mat2); mat3
mat3 <- rbind(mat3, mat2); mat3
a1 <- c(1, 2, 3, 4)
a2 <- c(5, 6, 7, 8)
a3 <- c(9, 10, 11, 12)
mat1 <- rbind(a1, a2); mat1
mat2 <- rbind(mat1, a3); mat2
mat3 <- 0
mat3 <- rbind(mat3, mat2); mat3
a1 <- c(1, 2, 3, 4)
a2 <- c(5, 6, 7, 8)
a3 <- c(9, 10, 11, 12)
mat1 <- rbind(a1, a2); mat1
mat2 <- rbind(mat1, a3); mat2
mat3 <- rbind(mat3, mat2); mat3
a1 <- c(1, 2, 3, 4)
a2 <- c(5, 6, 7, 8)
a3 <- c(9, 10, 11, 12)
mat1 <- rbind(a1, a2); mat1
mat2 <- rbind(mat1, a3); mat2
mat3 <- rbind(mat3, mat2); mat3
mat <- matrix(, 5, 8)
mat <- matrix(, 5, 8); mat
mat[i,] <- data[(i-1)*8 + 1 : i*8]
mat <- matrix(, 5, 8);
for(i in 1:5)
mat[i,] <- data[(i-1)*8 + 1 : i*8]
for(i in 1:5) for(j in 1:8)
mat[i, j] <- data[i*8 - 8 + j]
}
mat <- matrix(0, 5, 8);
for(i in 1:5) for(j in 1:8) {
mat[i, j] <- data[i*8 - 8 + j]
}
mat <- matrix(0, 5, 8); mat;
data <- sample(numbers, 40);data
data[1]
data[2]
data[i*8 - 8 + j]
x <- -2.53
round(x, 1);round(y)
for(i in 1:5) for(j in 1:8) {
data[i*8 - 8 + j]
}
d
for(i in 1:5) {
for(j in 1:8) {
data[i*8 - 8 + j]
}
}
print(i)
for(i in 1:5) {
for(j in 1:8) {
print(i)
data[i*8 - 8 + j]
}
}
print(data[i*8 - 8 + j])
for(i in 1:5) {
for(j in 1:8) {
print(data[i*8 - 8 + j])
}
}
for(i in 1:5) {
for(j in 1:8) {
print(mat[i, j])
print(data[i*8 - 8 + j])
}
}
for(i in 1:5) {
for(j in 1:8) {
mat[i, j] <- data[i*8 - 8 + j]
print(mat[i, j])
print(data[i*8 - 8 + j])
}
}
numbers = 1:100;
data <- sample(numbers, 40);
mat <- matrix(0, 5, 8); mat;
for(i in 1:5)
for(j in 1:8) {
mat[i, j] <- data[i*8 - 8 + j]
}
mat;
for(i in 1:5) for(j in 1:8) mat[i, j] <- data[i*8 - 8 + j]
mat;
for(i in 1:5) mat[i, ] <- data[i*8 - 7 : i*8]
for(i in 1:8) mat[, i] <- data[i*5 - 4 : i*5]
for(i in 1:8) mat[, i]
for(i in 1:8) print(mat[, i])
mat[2:3,]
mat[c(1,4,7,8),]
mat[2:3,]
mat[seq(2,3,1),]
mat[seq(2,3,3),]
mat[seq(2,6,1),]
mat[,c(1,4,7,8)]
x <- -2.55
round(x, 1);round(y)
x <- -2.59
round(x, 1);round(y)
x <- -2.56
round(x, 1);round(y)
round(x, 1);round(y)
y <-  3.45
round(x, 1);round(y)
round(x, 1);round(y, 1)
mean(mat[,7])
mean(mat[,7]);var(mat[,7])
chooseNumber <- sample(1:20, 1)
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10)
print("P")
else
print("NP")
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10)
print("P")
else
print("NP")
if(chooseNumber >= 10) print("P") else print("NP")
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
data <- sample(1:100, 40);
mat <- matrix(0, 5, 8); mat;
for(i in 1:5) for(j in 1:8) mat[i, j] <- data[i*8 - 8 + j]
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
set.seed(1)
data <- sample(1:100, 40);
mat <- matrix(0, 5, 8); mat;
for(i in 1:5) for(j in 1:8) mat[i, j] <- data[i*8 - 8 + j]
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
set.seed(1)
data <- sample(1:100, 40);
mat <- matrix(0, 5, 8); mat;
for(i in 1:5) for(j in 1:8) mat[i, j] <- data[i*8 - 8 + j]
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
set.seed(1)
data <- sample(1:100, 40);
mat <- matrix(0, 5, 8); mat;
for(i in 1:5) for(j in 1:8) mat[i, j] <- data[i*8 - 8 + j]
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
# --------------------------------
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
set.seed(1)
data <- sample(1:100, 40);
mat <- matrix(0, 5, 8); mat;
for(i in 1:5) for(j in 1:8) mat[i, j] <- data[i*8 - 8 + j]
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
# --------------------------------
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
set.seed(1)
data <- sample(1:100, 40);
mat <- matrix(0, 5, 8); mat;
for(i in 1:5) for(j in 1:8) mat[i, j] <- data[i*8 - 8 + j]
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
# --------------------------------
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
set.seed(1)
# --------------------------------
data <- sample(1:100, 40);
mat <- matrix(0, 5, 8); mat;
for(i in 1:5) for(j in 1:8) mat[i, j] <- data[i*8 - 8 + j]
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
set.seed(1)
# --------------------------------
data <- sample(1:100, 40);
mat <- matrix(0, 5, 8); mat;
for(i in 1:5) for(j in 1:8) mat[i, j] <- data[i*8 - 8 + j]
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
set.seed(1)
# --------------------------------
data <- sample(1:100, 40);
mat <- matrix(0, 5, 8); mat;
for(i in 1:5) for(j in 1:8) mat[i, j] <- data[i*8 - 8 + j]
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
data <- sample(1:100, 40);
set.seed(1)
# --------------------------------
data <- sample(1:100, 40);
set.seed(1)
# --------------------------------
data <- sample(1:100, 40); data;
set.seed(1)
# --------------------------------
data <- sample(1:100, 40); data;
mat <- matrix(0, 5, 8); mat;
for(i in 1:5) for(j in 1:8) mat[i, j] <- data[i*8 - 8 + j]
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
mat <- matrix(0, 5, 8); mat;
one <- mat; one;
set.seed(1)
# --------------------------------
data <- sample(1:100, 40); data;
mat <- matrix(0, 5, 8); mat;
for(i in 1:5) for(j in 1:8) mat[i, j] <- data[i*8 - 8 + j]
one <- mat; one;
mat <- matrix(data, 5, 8); mat;
mat <- matrix(data, 5, 8); mat;
data <- sample(1:100, 40); data;
mat <- matrix(data, 5, 8); mat;
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
data <- sample(1:100, 40); data;
mat <- matrix(data, 5, 8); mat;
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
data <- sample(1:100, 40); data;
mat <- matrix(data, 5, 8); mat;
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
set.seed(1)
# --------------------------------
data <- sample(1:100, 40); data;
mat <- matrix(data, 5, 8); mat;
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
set.seed(1)
# --------------------------------
data <- sample(1:100, 40); data;
mat <- matrix(data, 5, 8); mat;
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
data <- sample(1:100, 40); data;
mat <- matrix(data, 5, 8); mat;
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
# --------------------------------
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
set.seed(1)
# --------------------------------
data <- sample(1:100, 40); data;
mat <- matrix(data, 5, 8); mat;
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
# --------------------------------
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
#
#  Exercise.r
#
#  Created by KJBS2 on 03/18/2016.
#  Copyright (c) 2016 KJBS2. All rights reserved.
#
set.seed(1)
# --------------------------------
data <- sample(1:100, 40); data;
mat <- matrix(data, 5, 8); mat;
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
# --------------------------------
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
# --------------------------------
#
#  Exercise.r
#
#  Created by KJBS2 on 03/18/2016.
#  Copyright (c) 2016 KJBS2. All rights reserved.
#
set.seed(1)
# --------------------------------
data <- sample(1:100, 40); data;
mat <- matrix(data, 5, 8); mat;
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
# --------------------------------
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
# --------------------------------
#
#  Exercise.r
#
#  Created by KJBS2 on 03/18/2016.
#  Copyright (c) 2016 KJBS2. All rights reserved.
#
set.seed(1)
# --------------------------------
data <- sample(1:100, 40); data;
mat <- matrix(data, 5, 8); mat;
one <- mat; one;
two <- mat[2:3,]; two;
three <- mat[,c(1,4,7,8)]; three;
mean(mat[,7]);var(mat[,7])
# --------------------------------
chooseNumber <- sample(1:20, 1)
if(chooseNumber >= 10) print("P") else print("NP")
# --------------------------------
chooseNumbers <- sample(1:20, 8)
for(number in chooseNumbers)
if(number >= 10) print("P") else print("NP")
# --------------------------------
