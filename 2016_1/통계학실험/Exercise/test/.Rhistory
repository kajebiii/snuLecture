quantile = quantile(salePrice); quantile;
# 4.2
pick = sample(salePrice, 50)
mean(pick)
# 4.3
par(mfrow = c(1,1))
sample_mean50 = c()
for(i in 1:5000) {
pick = sample(salePrice, 50)
sample_mean50[i] <- mean(pick)
}
hist(sample_mean50, probability=T)
mean = mean(sample_mean50)
sd = sd(sample_mean50)
x <- seq(from = 100000, to = 300000, by = 1000)
y <- dnorm(x, mean = mean, sd = sd)
lines(x, y, col = "red")
# 4.4
mean(sample_mean50)
var(sample_mean50)
# 4.5
par(mfrow = c(1,1))
sample_mean150 = c()
for(i in 1:5000) {
pick = sample(salePrice, 150)
sample_mean150[i] <- mean(pick)
}
hist(sample_mean150, probability=T)
mean = mean(sample_mean150)
sd = sd(sample_mean150)
x <- seq(from = 100000, to = 300000, by = 1000)
y <- dnorm(x, mean = mean, sd = sd)
lines(x, y, col = "red")
#
#  Exercise.r
#
#  Created by KJBS2 on 04/08/2016.
#  Copyright (c) 2016 KJBS2. All rights reserved.
#
data = read.csv("/Users/kjb/Desktop/Exercise/test/ames.csv", header=T);
# 4.1
salePrice = data$Sphy
salePrice
hist(salePrice, probability = "T", breaks = 100)
mean     =     mean(salePrice);     mean;
sd       =       sd(salePrice);       sd;
var      =      var(salePrice);      var;
median   =   median(salePrice);   median;
quantile = quantile(salePrice); quantile;
# 4.2
pick = sample(salePrice, 50)
mean(pick)
# 4.3
par(mfrow = c(1,1))
sample_mean50 = c()
for(i in 1:5000) {
pick = sample(salePrice, 50)
sample_mean50[i] <- mean(pick)
}
hist(sample_mean50, probability=T)
mean = mean(sample_mean50)
sd = sd(sample_mean50)
x <- seq(from = 100000, to = 300000, by = 1000)
y <- dnorm(x, mean = mean, sd = sd)
lines(x, y, col = "red")
# 4.4
mean(sample_mean50)
var(sample_mean50)
# 4.5
par(mfrow = c(1,1))
sample_mean150 = c()
for(i in 1:5000) {
pick = sample(salePrice, 150)
sample_mean150[i] <- mean(pick)
}
hist(sample_mean150, probability=T)
mean = mean(sample_mean150)
sd = sd(sample_mean150)
x <- seq(from = 100000, to = 300000, by = 1000)
y <- dnorm(x, mean = mean, sd = sd)
lines(x, y, col = "red")
score = data$phy
hist(score, breaks = 20)
hist(score, breaks = 100)
salePrice = data$Sphy
hist(salePrice, probability = "T", breaks = 100)
salePrice
score = data$phy
score
#
#  Exercise.r
#
#  Created by KJBS2 on 04/08/2016.
#  Copyright (c) 2016 KJBS2. All rights reserved.
#
data = read.csv("/Users/kjb/Desktop/Exercise/test/ames.csv", header=T);
View(data)
score = data$phy
hist(score, breaks = 100)
score
# 4.1
salePrice = data$phy
salePrice
hist(salePrice, probability = "T", breaks = 100)
mean     =     mean(salePrice);     mean;
sd       =       sd(salePrice);       sd;
var      =      var(salePrice);      var;
median   =   median(salePrice);   median;
quantile = quantile(salePrice); quantile;
# 4.2
pick = sample(salePrice, 50)
mean(pick)
# 4.3
par(mfrow = c(1,1))
sample_mean50 = c()
for(i in 1:5000) {
pick = sample(salePrice, 50)
sample_mean50[i] <- mean(pick)
}
hist(sample_mean50, probability=T)
mean = mean(sample_mean50)
sd = sd(sample_mean50)
x <- seq(from = 100000, to = 300000, by = 1000)
y <- dnorm(x, mean = mean, sd = sd)
lines(x, y, col = "red")
# 4.4
mean(sample_mean50)
var(sample_mean50)
# 4.5
par(mfrow = c(1,1))
sample_mean150 = c()
for(i in 1:5000) {
pick = sample(salePrice, 150)
sample_mean150[i] <- mean(pick)
}
hist(sample_mean150, probability=T)
mean = mean(sample_mean150)
sd = sd(sample_mean150)
x <- seq(from = 100000, to = 300000, by = 1000)
y <- dnorm(x, mean = mean, sd = sd)
lines(x, y, col = "red")
salePrice = data$phy
salePrice
hist(salePrice, probability = "T", breaks = 100)
mean     =     mean(salePrice);     mean;
sd       =       sd(salePrice);       sd;
var      =      var(salePrice);      var;
median   =   median(salePrice);   median;
quantile = quantile(salePrice); quantile;
salePrice = data$phy
salePrice
hist(salePrice, probability = "T", breaks = 200)
mean     =     mean(salePrice);     mean;
sd       =       sd(salePrice);       sd;
var      =      var(salePrice);      var;
median   =   median(salePrice);   median;
quantile = quantile(salePrice); quantile;
data = read.csv("/Users/kjb/Desktop/Exercise/test/boom.csv", header=T);
data = read.csv("/Users/kjb/Desktop/Exercise/test/boom.csv", header=T);
a = 3
data = read.csv("/Users/kjb/Desktop/Exercise/test/boom.csv", header=T);
data = read.table("/Users/kjb/Desktop/Exercise/test/boom.csv", header=T);
data = read.csv("/Users/kjb/Desktop/Exercise/test/boom.csv", header=T);
View(data)
time = data$TimeStamp
hist(time)
help(hist)
hist(time, xlim = seq(1404097200, 1468378800, 86400))
help(hist)
hist(time, breaks = seq(1404097200, 1468378800, 86400))
hist(time, breaks = seq(1404097200, 1468378800, 86400*31))
#
#  Exercise.r
#
#  Created by KJBS2 on 04/08/2016.
#  Copyright (c) 2016 KJBS2. All rights reserved.
#
data = read.csv("/Users/kjb/Desktop/Exercise/test/boom.csv", header=T);
View(data)
time = data$TimeStamp
hist(time, breaks = seq(1404097200, 1468378800, 86400*31))
help(hist)
score = data$phy
hist(score, breaks = 100)
score
# 4.1
salePrice = data$phy
salePrice
hist(salePrice, probability = "T", breaks = 200)
mean     =     mean(salePrice);     mean;
sd       =       sd(salePrice);       sd;
var      =      var(salePrice);      var;
median   =   median(salePrice);   median;
quantile = quantile(salePrice); quantile;
# 4.2
pick = sample(salePrice, 50)
mean(pick)
# 4.3
par(mfrow = c(1,1))
sample_mean50 = c()
for(i in 1:5000) {
pick = sample(salePrice, 50)
sample_mean50[i] <- mean(pick)
}
hist(sample_mean50, probability=T)
mean = mean(sample_mean50)
sd = sd(sample_mean50)
x <- seq(from = 100000, to = 300000, by = 1000)
y <- dnorm(x, mean = mean, sd = sd)
lines(x, y, col = "red")
# 4.4
mean(sample_mean50)
var(sample_mean50)
# 4.5
par(mfrow = c(1,1))
sample_mean150 = c()
for(i in 1:5000) {
pick = sample(salePrice, 150)
sample_mean150[i] <- mean(pick)
}
hist(sample_mean150, probability=T)
mean = mean(sample_mean150)
sd = sd(sample_mean150)
x <- seq(from = 100000, to = 300000, by = 1000)
y <- dnorm(x, mean = mean, sd = sd)
lines(x, y, col = "red")
data = read.csv("/Users/kjb/Desktop/Exercise/test/boom.csv", header=T);
View(data)
time = data$TimeStamp
hist(time, breaks = seq(k, 1468378800, 86400))
k = 1468378800-86400*30
hist(time, breaks = seq(k, 1468378800, 86400))
k = 1468378800-86400*90
hist(time, breaks = seq(k, 1468378800, 86400))
k = 1468378800-86400*1000
hist(time, breaks = seq(k, 1468378800, 86400))
k = 1468378800-86400*500
hist(time, breaks = seq(k, 1468378800, 86400))
k = 1468378800-86400*700
hist(time, breaks = seq(k, 1468378800, 86400))
k = 1468378800-86400*900
hist(time, breaks = seq(k, 1468378800, 86400))
k1 = 1468378800-86400*900
k2 = 1468378800-86400*800
hist(time, breaks = seq(k, k2, 86400))
k1 = 1468378800-86400*900
k2 = 1468378800-86400*800
hist(time, breaks = seq(k1, k2, 86400))
k1 = 1468378800-86400*1000
k2 = 1468378800-86400*800
hist(time, breaks = seq(k1, k2, 86400))
k1 = 1468378800-86400*1000
k2 = 1468378800-86400
hist(time, breaks = seq(k1, k2, 86400))
k1 = 1461885849-86400*1000
k2 = 1461885849
hist(time, breaks = seq(k1, k2, 86400))
k1 = 1461885849-86400*10
k2 = 1461885849
hist(time, breaks = seq(k1, k2, 86400))
k1 = 1461885849-86400*100
k2 = 1461885849
hist(time, breaks = seq(k1, k2, 86400))
k1 = 1461885849-86400*100
k2 = 1461885849
hist(time, breaks = seq(k1, k2, 86400))
k1 = 1461885849-86400*100; k1;
k2 = 1461885849; k2;
k1 = 1461885849-86400*100; k1;
k2 = 1461885849; k2;
hist(time, breaks = seq(k1, k2, 86400*31))
k1 = 1461885849-86400*10000; k1;
k2 = 1461885849; k2;
hist(time, breaks = seq(k1, k2, 86400*31))
hist(time, breaks = seq(1404097200, k2, 86400*31))
seq(1404097200, k2, 86400*31)
hist(time, breaks = seq(1404097200, 1468378800, 86400))
hist(time, breaks = seq(1404097200, 1468378800, 86400*31))
hist(time, breaks = seq(1404097200, 1465378800, 86400*31))
hist(time, breaks = seq(1454097200, 1465378800, 86400*31))
hist(time, breaks = seq(1404097200, 1465378800, 86400))
hist(time, breaks = seq(1434097200, 1465378800, 86400))
hist(time, breaks = seq(1424097200, 1465378800, 86400))
hist(time, breaks = seq(1414097200, 1465378800, 86400))
hist(time, breaks = seq(1404097200, 1465378800, 86400))
hist(time, breaks = seq(1394097200, 1465378800, 86400))
source('~/Desktop/Exercise/test/Exercise.r', echo=TRUE)
late = data[data$TimeStamp > 1450000000]
late = late$TimeStamp
late = data[data$TimeStamp > 1450000000]
late = data[data$TimeStamp > 1450000000,]
late = late$TimeStamp
hist(late, breaks = seq(1404097200, 1465378800, 86400))
hist(late, breaks = seq(1454097200, 1465378800, 86400))
hist(late, breaks = seq(1449999999, 1465378800, 86400))
hist(late, breaks = seq(1449999999, 1465378800, 86400/4))
hist(late, breaks = seq(1459999999, 1465378800, 86400/4))
late = data[data$TimeStamp > 1460000000,]
late = late$TimeStamp
hist(late, breaks = seq(1459999999, 1465378800, 86400/4))
hist(late, breaks = seq(1459999999, 1462378800, 86400/4))
hist(late, breaks = seq(1459999999, 1462378800, 86400/24))
hist(late, breaks = seq(lastday-day*24*60*60, lastday, 24*60*60/24))
data = read.csv("/Users/kjb/Desktop/Exercise/test/boom.csv", header=T);
View(data)
time = data$TimeStamp
1404097200
k1 = 1468378800-86400*900
k2 = 1468378800-86400*800
lastday = 1461942000
day = 10;
late = data[data$TimeStamp > lastday -day*24*60*60,]
late = late$TimeStamp
hist(late, breaks = seq(lastday-day*24*60*60, lastday, 24*60*60/24))
abline(v=1461942000,col="red")
for(i in 0:10) {
abline(v=1461942000-day*24*60*60,col="red")
}
for(i in 0:10) {
abline(v=1461942000-i*24*60*60,col="red")
}
hist(late, breaks = seq(lastday-day*24*60*60, lastday, 24*60*60/24/60))
for(i in 0:10) {
abline(v=1461942000-i*24*60*60,col="red")
}
hist(late, breaks = seq(lastday-day*24*60*60, lastday, 24*60*60/24/60/60))
for(i in 0:10) {
abline(v=1461942000-i*24*60*60,col="red")
}
hist(late, breaks = seq(lastday-day*24*60*60, lastday, 24*60*60/24/60/60))
hist(late, breaks = seq(lastday-day*24*60*60, lastday, 24*60*60/24/60))
ll = read.csv("/Users/kjb/Desktop/Exercise/test/length.csv", header=T);
View(ll)
mean(length)
length
length = ll$length;
length
mean(length)
sd(length)
hist(length)
summary(length)
hist(length, breaks:0:20)
hist(length, breaks = 0:20)
length = ll[ll$length < 51]
length = ll[ll$length < 51,]
hist(length, breaks = 0:20)
hist(length, breaks = 0:50)
hist(length, breaks = 0:51)
hist(length)
length = ll[ll$length < 51,]
hist(length)
length
length = ll[ll$length < 51,]
View(ll)
length = ll[ll$length < 51,]$length
length
hist(length)
length = ll[ll$length < 21,]$length
length
hist(length)
table(length)
help(hist)
hist(length, probability = "T")
thetime = ll$stamp
thetime
thetime = thetime - 1451530800
thetime
thetime = thetime %% (60*60*24)
thetime
hist(thetime)
thetime = thetime / 24
hist(thetime)
thetime = ll$stamp
thetime = thetime - 1451530800
thetime = thetime %% (60*60*24)
thetime = thetime / (24*60*60)
hist(thetime)
thetime = ll$stamp
thetime = thetime - 1451530800
thetime = thetime %% (60*60*24)
thetime = thetime / (24*60*60) * 24
hist(thetime)
thetime = ll$stamp
thetime = thetime - 1451574000
thetime = thetime %% (60*60*24)
thetime = thetime / (24*60*60) * 24
hist(thetime)
hist(thetime, probability = "T")
table(thetime)
thetime = floor(thetime, 1)
thetime = round(thetime, 1)
table(thetime)
thetime = round(thetime, 0)
table(thetime)
hist(thetime, probability = "T")
thetime = thetime / (24*60*60) * 24
thetime = ll$stamp
thetime = thetime - 1451574000
thetime = thetime %% (60*60*24)
thetime = thetime / (24*60*60) * 24
hist(thetime, probability = "T")
thetime = ll$stamp
thetime = thetime - 1451574000
thetime = thetime %% (60*60*24)
thetime = thetime / (24*60*60) * 24
thetime = round(thetime, 0)
hist(thetime, probability = "T")
table(thetime)
a = ll
a = ll
a
ll = read.csv("/Users/kjb/Desktop/Exercise/test/length.csv", header=T);
View(ll)
a = c(,,,,,)
a = c(1,,,,,)
a = c()
a = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == 0, ]
a = c()
for(i = 0:23) {
a[i] = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]
}
a = c()
for(i in 0:23) {
a[i] = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]
}
a[1]
a[i+1] = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]
a = c()
for(i in 0:23) {
a[i+1] = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]
}
a[1]
a[1]$stamp
a[i+1] = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]
a = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]
a
a[i+1] = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]
for(i in 0:23) {
a[i+1] = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]
}
a = c()
for(i in 0:23) {
a[i+1] = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]
}
a[1]
a[i+1] = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]$length
a = c()
for(i in 0:23) {
a[i+1] = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]$length
}
a[1]
a[2]
mean(a)
for(i in 0:23) {
a = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]$length
mean(a)
}
mean(a)
for(i in 0:23) {
a = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]$length
print(mean(a))
}
for(i in 0:23) {
a = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]$length
print(i, mean(a))
}
print(paste(i, ":", mean(a))
for(i in 0:23) {
a = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]$length
print(paste(i, ":", mean(a))
}
for(i in 0:23) {
a = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]$length
print(paste(i, ":", mean(a)))
}
timeLength  = c();
for(i in 0:23) {
a = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]$length
timeLength[i+1] = mean(a);
}
hist(timeLength)
timeLength  = c();
for(i in 0:23) {
a = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]$length
timeLength[i+1] = c(i, mean(a));
}
theX = c();
timeLength  = c();
for(i in 0:23) {
a = ll[ round(((ll$stamp-1451574000)%%(60*60*24))/(24*60*60)*24,0) == i, ]$length
theX[i+1] = i+1
timeLength[i+1] = mean(a);
}
plot(theX, timeLength)
plot(theX, timeLength, type="l")
help(adline)
help(abline)
help(h = mean(length))
plot(theX, timeLength, type="l")
help(h = mean(length))
abline(h = mean(length))
mean(length)
ll = read.csv("/Users/kjb/Desktop/Exercise/test/length.csv", header=T);
View(ll)
length = ll$length;
length
mean(length)
abline(h = mean(length))
help(plot)
plot(theX, timeLength, type="l", main = "time - Length")
abline(h = mean(length))
sd(length)
